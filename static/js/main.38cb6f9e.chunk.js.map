{"version":3,"sources":["global_styles/ResetCSS.style.js","global_styles/BodyAndRoot.style.js","images/League-of-Legends-Logo.png","Navbar.js","Footer.js","images/loading.svg","Loader.js","Card.js","Utils.js","Main.js","GameFinishedScreen.js","App.js","index.js"],"names":["ResetCSS","createGlobalStyle","BodyAndRootStyles","NavbarContainer","styled","div","NavbarTitle","h1","LoLLogo","img","attrs","props","src","leagueLogo","alt","Container","NavbarText","p","Navbar","currScore","highScore","level","id","defaultProps","FooterContainer","FooterText","FooterLink","a","Footer","href","LoaderContainer","LoaderText","Loader","loadingSVG","CardContainer","image","Card","whenClicked","champion","onClick","shuffleArray","array","i","length","j","Math","floor","random","temp","Main","champions","handleCardCLick","useState","cards","setCards","useEffect","newCards","counter","forEach","obj","push","map","card","Wrapper","BoldText","Text","Button","button","GameFinishedScreen","score","handleNewGame","App","loading","setLoading","setScore","scoreRef","setHS","HSRef","unusedChampions","setUnusedChampions","usedChampions","setUsedChampions","usedChampionsRef","lvl","setLvl","gameFinished","setGameFinished","getChampionList","fetch","response","json","respJSON","Object","keys","isNumberInArray","numArray","num","handleGetNewChampions","indexes","newUsedChamps","index","clicked","current","addUsedChampions","number","numbers","isChampionUsed","getRandomNumbers","handleScoreBoard","isGameFinished","prevScore","e","clickedChamp","getChampionObj","target","isWinningClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38cb6f9e.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const ResetCSS = createGlobalStyle`\r\n    /* Box sizing rules */\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    /* Remove default padding */\r\n    ul[class],\r\n    ol[class] {\r\n        padding: 0;\r\n    }\r\n\r\n    /* Remove default margin */\r\n    body,\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    p,\r\n    ul[class],\r\n    ol[class],\r\n    li,\r\n    figure,\r\n    figcaption,\r\n    blockquote,\r\n    dl,\r\n    dd {\r\n        margin: 0;\r\n    }\r\n\r\n    /* Set core body defaults */\r\n    body {\r\n        min-height: 100vh;\r\n        scroll-behavior: smooth;\r\n        text-rendering: optimizeSpeed;\r\n        line-height: 1.5;\r\n    }\r\n\r\n    /* Remove list styles on ul, ol elements with a class attribute */\r\n    ul[class],\r\n    ol[class] {\r\n        list-style: none;\r\n    }\r\n\r\n    /* A elements that don't have a class get default styles */\r\n    a:not([class]) {\r\n        text-decoration-skip-ink: auto;\r\n    }\r\n\r\n    /* Make images easier to work with */\r\n    img {\r\n        max-width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    /* Natural flow and rhythm in articles by default */\r\n    article > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    /* Inherit fonts for inputs and buttons */\r\n    input,\r\n    button,\r\n    textarea,\r\n    select {\r\n        font: inherit;\r\n    }\r\n\r\n    /* Remove all animations and transitions for people that prefer not to see them */\r\n    @media (prefers-reduced-motion: reduce) {\r\n        html:focus-within {\r\n            scroll-behavior: auto;\r\n        }\r\n        \r\n        * {\r\n            animation-duration: 0.01ms !important;\r\n            animation-iteration-count: 1 !important;\r\n            transition-duration: 0.01ms !important;\r\n            scroll-behavior: auto !important;\r\n        }\r\n    }\r\n`;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const BodyAndRootStyles = createGlobalStyle`\r\n    body {\r\n        background-color: rgb(204, 204, 204);\r\n        font-family: 'Lato', sans-serif;\r\n    }\r\n\r\n    #root {\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/League-of-Legends-Logo.82127146.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport leagueLogo from './images/League-of-Legends-Logo.png';\r\n\r\nconst NavbarContainer = styled.div`\r\n    width: 100%;\r\n    height: 70px;\r\n    background-color: blue;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: #111111;\r\n\r\n    @media (max-width: 850px) {\r\n        height: max-content;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst NavbarTitle = styled.h1`\r\n    font-size: 24px;\r\n    color: rgb(255, 255, 255);\r\n\r\n    @media (max-width: 850px) {\r\n        margin-left: 30px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        margin-left: 0px;\r\n        margin-bottom: 10px;\r\n    }\r\n`\r\n\r\nconst LoLLogo = styled.img.attrs(props => ({\r\n    src: leagueLogo,\r\n    alt: \"league of legends logo\"\r\n}))`\r\n    height: 80px;\r\n    width: 160px;\r\n    margin-left: 30px;\r\n\r\n    @media (max-width: 600px) {\r\n        margin-left: 0px;\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 850px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst NavbarText = styled.p`\r\n    font-size: 20px;\r\n    color: rgb(255, 255, 255);\r\n    margin-right: 50px;\r\n\r\n    @media (max-width: 600px) {\r\n        margin-right: 0px;\r\n        margin-bottom: 5px;\r\n    }\r\n`\r\n\r\nfunction Navbar({currScore, highScore, level}) {\r\n    return (\r\n        <NavbarContainer id=\"navbar\">\r\n            <Container>\r\n                <LoLLogo />\r\n                <NavbarTitle>Memory Game</NavbarTitle>\r\n            </Container>\r\n            <Container>\r\n                <NavbarText>LEVEL {level}</NavbarText>\r\n            </Container>\r\n            <Container>\r\n                <NavbarText>Score: {currScore}</NavbarText>\r\n                <NavbarText>Best Score: {highScore}</NavbarText>\r\n            </Container>\r\n        </NavbarContainer>\r\n    );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    currScore: 0,\r\n    highScore: 0\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterContainer = styled.div`\r\n    width: 100%;\r\n    background-color: #111111;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst FooterText = styled.p`\r\n    font-size: 16px;\r\n    color: white;\r\n    text-align: center;\r\n`\r\n\r\nconst FooterLink = styled.a`\r\n    &:visited {\r\n        color: white;\r\n    }\r\n`\r\n\r\nfunction Footer() {\r\n    return (\r\n        <FooterContainer id=\"footer\">\r\n            <FooterText>Made by <FooterLink href=\"https://github.com/fwendeburg\">Francisco Wendeburg</FooterLink></FooterText>\r\n            <FooterText>This web site is not affiliated in any way with with Riot Games. This is just a personal project.</FooterText>\r\n        </FooterContainer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/loading.6782897e.svg\";","import styled from \"styled-components\";\r\n\r\nimport loadingSVG from './images/loading.svg';\r\n\r\nconst LoaderContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5px;\r\n`\r\n\r\nconst LoaderText = styled.p`\r\n    font-size: 30px;\r\n    color: #000000;\r\n`\r\n\r\nfunction Loader() {\r\n    return (\r\n        <LoaderContainer>\r\n            <LoaderText>Loading</LoaderText>\r\n            <img src={loadingSVG} alt=\"loading spinner\"/>\r\n        </LoaderContainer>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContainer = styled.div`\r\n    height: 150px;\r\n    width: 150px;\r\n    background: url(${props => props.image});\r\n    background-size: contain;\r\n    border: 6px solid #caaf6a;\r\n\r\n    &:hover { \r\n        background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.3)), url(${props => props.image});\r\n        background-size: contain;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nfunction Card({image, whenClicked, champion}) {\r\n    return (\r\n        <CardContainer image={image} onClick={whenClicked} id= {champion}/>\r\n    );\r\n}\r\n\r\nexport default Card;","const shuffleArray = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nexport {shuffleArray};","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Card from './Card';\r\n\r\nimport {shuffleArray} from './Utils';\r\n\r\nconst CardContainer = styled.div`\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    padding-left: 50px;\r\n    padding-right: 50px;\r\n    max-width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n    justify-items: center;\r\n    align-content: center;\r\n    gap: 30px;\r\n`\r\n\r\nfunction Main({champions, handleCardCLick}) {\r\n    const [cards, setCards] = useState([]);\r\n\r\n    function getChampionImage(champion) {\r\n        return `https://ddragon.leagueoflegends.com/cdn/img/champion/tiles/${champion}_0.jpg`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        shuffleArray(cards);\r\n    });\r\n\r\n    useEffect(() => {   \r\n        let newCards = [];\r\n        let counter = 0;\r\n\r\n        champions.forEach(obj => {\r\n            newCards.push(<Card image={getChampionImage(obj.champion)} key={counter} whenClicked={handleCardCLick} champion={obj.champion}/>);\r\n            counter++;\r\n        });\r\n\r\n        shuffleArray(newCards);\r\n        setCards(newCards)\r\n    }, [champions])\r\n\r\n    return (\r\n        <CardContainer>\r\n            {cards.map(card => {return card})}\r\n        </CardContainer>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgb(40 44 52);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst BoldText = styled.p`\r\n    font-size: 40px;\r\n    font-weight: 700;\r\n    color: white;\r\n`\r\n\r\nconst Text = styled.p`\r\n    margin-top: 10px;\r\n    font-size: 30px;\r\n    color: white;\r\n`\r\n\r\nconst Button = styled.button`\r\n    margin-top: 30px;\r\n    border: none;\r\n    background-color: rgb(62, 68, 81);\r\n    color: white;\r\n    border-radius: 5px;\r\n    height: 50px;\r\n    width: 150px;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: #4F5665;\r\n    }\r\n`\r\n\r\nfunction GameFinishedScreen({score, handleNewGame}) {\r\n    return (\r\n        <Wrapper>\r\n            <BoldText>GAME OVER</BoldText>\r\n            <Text>Your score is {score}</Text>\r\n            <Button onClick={handleNewGame}>New Game</Button>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default GameFinishedScreen;","import React, { useEffect } from \"react\";\r\nimport useState from 'react-usestateref';\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport Loader from './Loader';\r\nimport Main from './Main';\r\nimport GameFinishedScreen from \"./GameFinishedScreen\";\r\n\r\nfunction App() {\r\n  const MAXNUMGENERATED = 5;\r\n  const [loading, setLoading] = useState(false);\r\n  const [score, setScore, scoreRef] = useState(0);\r\n  const [highScore, setHS, HSRef] = useState(0);\r\n  const [unusedChampions, setUnusedChampions] = useState([]);\r\n  const [usedChampions, setUsedChampions, usedChampionsRef] = useState([]);\r\n  const [lvl, setLvl] = useState(1);\r\n  const [gameFinished, setGameFinished] = useState(false);\r\n\r\n  async function getChampionList() {\r\n    let response = await fetch('https://ddragon.leagueoflegends.com/cdn/11.16.1/data/en_US/champion.json');\r\n    let respJSON = await response.json();\r\n\r\n    setUnusedChampions(Object.keys(respJSON['data']));\r\n  }\r\n\r\n  function isNumberInArray(numArray, num) {\r\n    for (let i = 0; i < numArray.length; i++) {\r\n      if (numArray[i] === num) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function getRandomNumbers() {\r\n    let numbers = [];\r\n    let number;\r\n\r\n    while(numbers.length < MAXNUMGENERATED) {\r\n\r\n      number = Math.floor(Math.random()*unusedChampions.length);\r\n\r\n      if (!isNumberInArray(numbers, number) && !isChampionUsed(unusedChampions[number])) {\r\n        numbers.push(number);\r\n      }\r\n    }\r\n    \r\n    return numbers;\r\n  }\r\n\r\n  function addUsedChampions(indexes) {\r\n    let newUsedChamps = [];\r\n\r\n    indexes.forEach(index => {\r\n      newUsedChamps.push({champion: unusedChampions[index], clicked: false});\r\n    });\r\n\r\n    setUsedChampions([...usedChampionsRef.current, ...newUsedChamps]);\r\n  }\r\n\r\n  function getChampionObj(champion) {\r\n    for (let i = 0; i < usedChampions.length; i++) {\r\n      if (usedChampions[i].champion === champion) {\r\n        return usedChampions[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleGetNewChampions() {\r\n    let indexes = getRandomNumbers();\r\n\r\n    addUsedChampions(indexes);\r\n  }\r\n  \r\n  function isWinningClick(champion) {\r\n    for (let i = 0; i < usedChampions.length; i++) {\r\n      if(!usedChampions[i].clicked && usedChampions[i].champion !== champion) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function isChampionUsed(champion) {\r\n    for (let i = 0; i < usedChampions.length; i++) {\r\n      if (usedChampions[i].champion === champion) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function levelUp() {\r\n    setLvl(lvl+1);\r\n\r\n    handleGetNewChampions();\r\n  }\r\n\r\n  async function handleNewGame() {\r\n    setUsedChampions([]);\r\n    handleScoreBoard(true);\r\n    setGameFinished(false);\r\n    setLvl(1);\r\n    handleGetNewChampions();\r\n  }\r\n\r\n  function handleCardCLick(e) {\r\n    let clickedChamp = getChampionObj(e.target.id);\r\n\r\n    if(!clickedChamp.clicked) {\r\n      handleScoreBoard();\r\n\r\n      if (isWinningClick(clickedChamp.champion)) {\r\n        clickedChamp.clicked = true;\r\n        levelUp();\r\n      }\r\n      else {\r\n        clickedChamp.clicked = true;\r\n      }\r\n    }\r\n    else {\r\n      setGameFinished(true);\r\n    }\r\n  }\r\n\r\n  function handleScoreBoard(isGameFinished=false) {\r\n    if (isGameFinished) {\r\n      setScore(0);\r\n    }\r\n    else {\r\n      setScore((prevScore) => prevScore+1);\r\n    }\r\n\r\n    if (scoreRef.current > HSRef.current) {\r\n      setHS(scoreRef.current);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      await getChampionList();\r\n      setLoading(false);\r\n    })()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Add initial set of champions.\r\n    if (lvl === 1 && unusedChampions.length !== 0) {\r\n      handleGetNewChampions();\r\n    }\r\n  }, [unusedChampions, lvl])\r\n\r\n  return (\r\n    <>\r\n      {gameFinished? <GameFinishedScreen handleNewGame={handleNewGame} score={score} /> : <><Navbar currScore={score} highScore={highScore} level={lvl}/>{loading? <Loader /> : <Main champions={usedChampions} handleCardCLick={handleCardCLick}/>}<Footer /></>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ResetCSS } from './global_styles/ResetCSS.style.js';\r\nimport { BodyAndRootStyles } from './global_styles/BodyAndRoot.style.js';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ResetCSS />\r\n    <BodyAndRootStyles />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}